/*
 * generated by Xtext 2.15.0
 */
package org.xtext.imt.browserautomation.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.imt.browserautomation.ide.contentassist.antlr.internal.InternalBrowserAutomationParser;
import org.xtext.imt.browserautomation.services.BrowserAutomationGrammarAccess;

public class BrowserAutomationParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(BrowserAutomationGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, BrowserAutomationGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getInstructionAccess().getAlternatives(), "rule__Instruction__Alternatives");
			builder.put(grammarAccess.getINSERT_ONAccess().getDataAlternatives_2_0(), "rule__INSERT_ON__DataAlternatives_2_0");
			builder.put(grammarAccess.getCHECK_BOXEAccess().getAlternatives_0(), "rule__CHECK_BOXE__Alternatives_0");
			builder.put(grammarAccess.getCHECK_BOXEAccess().getAlternatives_1(), "rule__CHECK_BOXE__Alternatives_1");
			builder.put(grammarAccess.getReadableAccess().getAlternatives(), "rule__Readable__Alternatives");
			builder.put(grammarAccess.getVerifiableAccess().getAlternatives(), "rule__Verifiable__Alternatives");
			builder.put(grammarAccess.getClickableAccess().getAlternatives(), "rule__Clickable__Alternatives");
			builder.put(grammarAccess.getTestAccess().getGroup(), "rule__Test__Group__0");
			builder.put(grammarAccess.getAFFECTATIONAccess().getGroup(), "rule__AFFECTATION__Group__0");
			builder.put(grammarAccess.getSELECTORAccess().getGroup(), "rule__SELECTOR__Group__0");
			builder.put(grammarAccess.getOPEN_BROWSERAccess().getGroup(), "rule__OPEN_BROWSER__Group__0");
			builder.put(grammarAccess.getGO_TO_URLAccess().getGroup(), "rule__GO_TO_URL__Group__0");
			builder.put(grammarAccess.getCLICK_ONAccess().getGroup(), "rule__CLICK_ON__Group__0");
			builder.put(grammarAccess.getVERIFY_THATAccess().getGroup(), "rule__VERIFY_THAT__Group__0");
			builder.put(grammarAccess.getINSERT_ONAccess().getGroup(), "rule__INSERT_ON__Group__0");
			builder.put(grammarAccess.getCHECK_BOXEAccess().getGroup(), "rule__CHECK_BOXE__Group__0");
			builder.put(grammarAccess.getCHOOSE_COMBOBOXAccess().getGroup(), "rule__CHOOSE_COMBOBOX__Group__0");
			builder.put(grammarAccess.getREAD_ONAccess().getGroup(), "rule__READ_ON__Group__0");
			builder.put(grammarAccess.getCOMBOBOXAccess().getGroup(), "rule__COMBOBOX__Group__0");
			builder.put(grammarAccess.getCHECKBOXAccess().getGroup(), "rule__CHECKBOX__Group__0");
			builder.put(grammarAccess.getSEARCH_FIELDAccess().getGroup(), "rule__SEARCH_FIELD__Group__0");
			builder.put(grammarAccess.getTEXTAccess().getGroup(), "rule__TEXT__Group__0");
			builder.put(grammarAccess.getBUTTONAccess().getGroup(), "rule__BUTTON__Group__0");
			builder.put(grammarAccess.getLINKAccess().getGroup(), "rule__LINK__Group__0");
			builder.put(grammarAccess.getIMAGEAccess().getGroup(), "rule__IMAGE__Group__0");
			builder.put(grammarAccess.getIMAGEAccess().getGroup_2(), "rule__IMAGE__Group_2__0");
			builder.put(grammarAccess.getPARAMSAccess().getGroup(), "rule__PARAMS__Group__0");
			builder.put(grammarAccess.getTestAccess().getNameAssignment_2(), "rule__Test__NameAssignment_2");
			builder.put(grammarAccess.getTestAccess().getInstructionsAssignment_3(), "rule__Test__InstructionsAssignment_3");
			builder.put(grammarAccess.getAFFECTATIONAccess().getNameAssignment_1(), "rule__AFFECTATION__NameAssignment_1");
			builder.put(grammarAccess.getAFFECTATIONAccess().getSelectorAssignment_3(), "rule__AFFECTATION__SelectorAssignment_3");
			builder.put(grammarAccess.getSELECTORAccess().getReadableAssignment_1(), "rule__SELECTOR__ReadableAssignment_1");
			builder.put(grammarAccess.getSELECTORAccess().getParamsAssignment_3(), "rule__SELECTOR__ParamsAssignment_3");
			builder.put(grammarAccess.getSELECTORAccess().getNumberAssignment_6(), "rule__SELECTOR__NumberAssignment_6");
			builder.put(grammarAccess.getRefElementAccess().getRefAssignment(), "rule__RefElement__RefAssignment");
			builder.put(grammarAccess.getElementAccess().getIdAssignment(), "rule__Element__IdAssignment");
			builder.put(grammarAccess.getGO_TO_URLAccess().getUrlAssignment_1(), "rule__GO_TO_URL__UrlAssignment_1");
			builder.put(grammarAccess.getCLICK_ONAccess().getElementAssignment_1(), "rule__CLICK_ON__ElementAssignment_1");
			builder.put(grammarAccess.getVERIFY_THATAccess().getElementAssignment_1(), "rule__VERIFY_THAT__ElementAssignment_1");
			builder.put(grammarAccess.getINSERT_ONAccess().getElementAssignment_1(), "rule__INSERT_ON__ElementAssignment_1");
			builder.put(grammarAccess.getINSERT_ONAccess().getDataAssignment_2(), "rule__INSERT_ON__DataAssignment_2");
			builder.put(grammarAccess.getCHECK_BOXEAccess().getElementAssignment_1_0(), "rule__CHECK_BOXE__ElementAssignment_1_0");
			builder.put(grammarAccess.getCHOOSE_COMBOBOXAccess().getElementAssignment_1(), "rule__CHOOSE_COMBOBOX__ElementAssignment_1");
			builder.put(grammarAccess.getCHOOSE_COMBOBOXAccess().getDataAssignment_3(), "rule__CHOOSE_COMBOBOX__DataAssignment_3");
			builder.put(grammarAccess.getREAD_ONAccess().getElementAssignment_1(), "rule__READ_ON__ElementAssignment_1");
			builder.put(grammarAccess.getCOMBOBOXAccess().getNameAssignment_1(), "rule__COMBOBOX__NameAssignment_1");
			builder.put(grammarAccess.getCHECKBOXAccess().getNameAssignment_1(), "rule__CHECKBOX__NameAssignment_1");
			builder.put(grammarAccess.getSEARCH_FIELDAccess().getNameAssignment_1(), "rule__SEARCH_FIELD__NameAssignment_1");
			builder.put(grammarAccess.getTEXTAccess().getNameAssignment_1(), "rule__TEXT__NameAssignment_1");
			builder.put(grammarAccess.getBUTTONAccess().getNameAssignment_1(), "rule__BUTTON__NameAssignment_1");
			builder.put(grammarAccess.getLINKAccess().getUrlAssignment_1(), "rule__LINK__UrlAssignment_1");
			builder.put(grammarAccess.getIMAGEAccess().getNameAssignment_1(), "rule__IMAGE__NameAssignment_1");
			builder.put(grammarAccess.getIMAGEAccess().getParamsAssignment_2_1(), "rule__IMAGE__ParamsAssignment_2_1");
			builder.put(grammarAccess.getPARAMSAccess().getKeyAssignment_0(), "rule__PARAMS__KeyAssignment_0");
			builder.put(grammarAccess.getPARAMSAccess().getValueAssignment_2(), "rule__PARAMS__ValueAssignment_2");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private BrowserAutomationGrammarAccess grammarAccess;

	@Override
	protected InternalBrowserAutomationParser createParser() {
		InternalBrowserAutomationParser result = new InternalBrowserAutomationParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public BrowserAutomationGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(BrowserAutomationGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
